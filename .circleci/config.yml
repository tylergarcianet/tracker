# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6-stretch-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  test:
    docker:
      - image: circleci/python:3.6-stretch-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: mkdir test-reports
      - run:
          name: get geckodriver
          command: |
            wget https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-linux64.tar.gz
            tar -xvzf geckodriver*
            chmod +x geckodriver
            sudo mv geckodriver /usr/local/bin/
      - run:
          name: Install the latest firefox
          command: |
            sudo apt-get remove firefox-mozilla-build binutils &&
            sudo sh -c "echo 'deb http://ftp.hr.debian.org/debian sid main' >> /etc/apt/sources.list" &&
            sudo apt-get update &&
            sudo apt-get install -t sid firefox &&
            firefox --version
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python main.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
